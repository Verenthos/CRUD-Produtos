version: '3.8'  # Versão do Docker Compose

services:
  # Configuração do Frontend (React/Vite)
  frontend:
    build: ./frontend              # Localização do Dockerfile do frontend
    ports:
      - "5173:5173"               # Mapeia porta 5173 do container para 5173 do host
    volumes:
      - ./frontend:/app           # Sincroniza pasta local com container para hot-reload
      - /app/node_modules         # Preserva node_modules do container
    depends_on:
      - backend                   # Garante que o backend inicie primeiro

  # Configuração do Backend (Node.js)
  backend:
    build: ./backend              # Localização do Dockerfile do backend
    ports:
      - "3333:3333"              # Mapeia porta 3333 do container para 3333 do host
    volumes:
      - ./backend:/app           # Sincroniza pasta local com container para hot-reload
      - /app/node_modules        # Preserva node_modules do container
    environment:
      # String de conexão com o banco - usa 'db' que é o nome do serviço do postgres
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/products
    depends_on:
      - db                       # Garante que o banco inicie primeiro

  # Configuração do Banco de Dados (PostgreSQL)
  db:
    image: postgres:15           # Usa imagem oficial do Postgres
    ports:
      - "5432:5432"             # Mapeia porta 5432 do container para 5432 do host
    environment:
      - POSTGRES_USER=postgres           # Usuario do banco
      - POSTGRES_PASSWORD=postgres       # Senha do banco
      - POSTGRES_DB=products            # Nome do banco
    volumes:
      # Persiste os dados do banco mesmo após container ser destruído
      - postgres_data:/var/lib/postgresql/data

# Definição dos volumes que serão criados
volumes:
  postgres_data:    # Volume para persistir dados do PostgreSQL